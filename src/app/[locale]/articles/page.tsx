import ArticleItem from "@/components/articles/articleItem";
import SearchArticleInput from "@/components/articles/searchArticleInput";
import { Metadata } from "next";
import React from "react";
import { getArticles, getArticlesCount } from "../apiCalls/articleApis";
import PaginationComponent from "@/components/articles/pagination";
import { Article } from "@prisma/client";
import { ISingeleArticle } from "@/utils/dtos";
import { ArticleCountInPage } from "@/utils/constants";
import { getTranslations } from "next-intl/server";

export const metadata: Metadata = {
  title: "Articles || All",
  description: "Generated by create next app",
};

interface ISearchParams {
  page: string;
}

const Articles = async ({
  params,
  searchParams,
}: {
  searchParams: ISearchParams;
  params: {
    locale: string;
  };
}) => {
  const page = searchParams.page || "1";
  const articles: ISingeleArticle[] = await getArticles(page);
  const pageCount = await getArticlesCount();
  const count = Math.ceil(pageCount / ArticleCountInPage);

  const t = await getTranslations("Articles");
  const local = params.locale;

  return (
    <div className=" container ">
      <h1 className=" font-semibold text-4xl my-5">{t("title")}</h1>
      <SearchArticleInput locale={local}></SearchArticleInput>
      <div className=" grid  grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {articles.map((article: Article) => (
          <ArticleItem key={article.id} article={article}></ArticleItem>
        ))}
      </div>
      <PaginationComponent pageCount={count} />
    </div>
  );
};

export default Articles;
